apiVersion: apps/v1
kind: Deployment
metadata:
  name: maie-api
spec:
  replicas: 2
  selector: { matchLabels: { app: maie-api } }
  template:
    metadata:
      labels: { app: maie-api }
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: api
          image: ghcr.io/yourorg/yourrepo/maie-api:latest
          imagePullPolicy: Always
          ports: [{ containerPort: 8000 }]
          env:
            - { name: LOG_LEVEL, value: "INFO" }
            - { name: METRICS_ENABLED, value: "true" }
            - { name: READINESS_REQUIRE_MODEL, value: "false" }
            - { name: EXPECTED_DIR, value: "/data/expected" }
          volumeMounts:
            - name: expected
              mountPath: /data/expected
              readOnly: true
            - name: artifacts
              mountPath: /app/artifacts
              readOnly: true
          livenessProbe:
            httpGet: { path: /health, port: 8000 }
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /ready, port: 8000 }
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: expected
          persistentVolumeClaim: { claimName: expected-pvc }
        - name: artifacts
          persistentVolumeClaim: { claimName: artifacts-pvc }
---
apiVersion: v1
kind: Service
metadata:
  name: maie-api
spec:
  selector: { app: maie-api }
  ports:
    - name: http
      port: 80
      targetPort: 8000
